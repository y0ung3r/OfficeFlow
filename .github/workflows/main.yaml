name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  main:
    runs-on: ${{ matrix.environment }}
    strategy:
      matrix:
        environment:
          - macos-latest
          - ubuntu-latest
          - windows-latest
      fail-fast: false

    # noinspection SpellCheckingInspection
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.*proj') }}

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
        
      - name: Test
        run: dotnet test --no-restore --no-build --nologo --collect:"XPlat Code Coverage"
        
      - name: Generate Test Coverage Report
        run: reportgenerator -reports:**/coverage.cobertura.xml -targetdir:TestResults/ -reporttypes:Cobertura
        
      - name: Update Test Coverage Badge
        uses: simon-k/dotnet-code-coverage-badge@v1.0.0
        id: create_coverage_badge
        with:
          label: Unit Test Coverage
          color: brightgreen
          path: TestResults/Cobertura.xml
          gist-filename: code-coverage.yml
          gist-id: 8b14e9b23304ea36b28821ee794a66a1
          gist-auth-token: ${{ secrets.Gist }}